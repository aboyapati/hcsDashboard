<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"	
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
		http://www.springframework.org/schema/task  http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">		

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<context:component-scan base-package="com.tekvizion.hcs" />
	<context:annotation-config/>
	<aop:aspectj-autoproxy/>	
	<tx:annotation-driven/>
	
	<beans:bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- Properties -->
	<beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<beans:property name="ignoreResourceNotFound" value="true"/>
      <beans:property name="locations">
            <beans:list>
            <beans:value>classpath:app.properties</beans:value>           
            <beans:value>classpath:hcs.properties</beans:value>
            <beans:value>file:${catalina.home}/hcs.properties</beans:value>
            <!-- <beans:value>file:${catalina.base}/hcs.properties</beans:value> -->
        	</beans:list>
        </beans:property>
	</beans:bean>
	
	<!-- This is to select properties file to use it in the jsp -->
	<beans:bean id="propertiesFile" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	<beans:property name="ignoreResourceNotFound" value="true"/>
	    <beans:property name="locations">
	        <beans:list>
	        	<beans:value>classpath:hcs.properties</beans:value>
            	<beans:value>file:${catalina.home}/hcs.properties</beans:value>
            	<!-- <beans:value>file:${catalina.base}/hcs.properties</beans:value> -->
	        </beans:list>
	    </beans:property>
	</beans:bean>
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<!-- This is to use properties file values in the jsp -->
		<beans:property name="exposedContextBeanNames">
        	<beans:list>
        		<beans:value>propertiesFile</beans:value>
        	</beans:list>
   		</beans:property>
	</beans:bean>	
	<resources mapping="/html/**" location="/WEB-INF/html/" />	

	<beans:bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<beans:property name="driverClass" value="com.mysql.jdbc.Driver" />
		
		<beans:property name="jdbcUrl" value="${app.settings.hibernate.jdbcurl}"/>		
		<beans:property name="user" value="${app.settings.hibernate.user}" />
		<beans:property name="password" value="${app.settings.hibernate.password}" />	
		
        <beans:property name="acquireIncrement"                       value="5"/>
        <beans:property name="idleConnectionTestPeriod"               value="300"/>
        <beans:property name="initialPoolSize"                        value="10"/>
        <beans:property name="maxConnectionAge"                       value="3600"/>
        <beans:property name="maxIdleTime"                            value="3200"/>
        <beans:property name="maxPoolSize"                            value="50"/>
        <beans:property name="minPoolSize"                            value="10"/>
        <beans:property name="preferredTestQuery"                     value="select 1"/>
        <beans:property name="testConnectionOnCheckout"                value="false"/>
        <beans:property name="testConnectionOnCheckin"                value="true"/>
		<beans:property name="unreturnedConnectionTimeout"            value="600"/>
	</beans:bean>
	
    <beans:bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" scope="singleton"> 	
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="packagesToScan" value="com.tekvizion.hcs"/>
		<beans:property name="configLocation" value="classpath:hibernate.cfg.xml" />

		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>
				<beans:prop key="hibernate.show_sql">false</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
				<beans:prop key="hibernate.format_sql">true</beans:prop>
			</beans:props>
		</beans:property>
	 </beans:bean>
	 
	 <beans:bean id="dbFactory" class="com.tekvizion.hcs.db.DbFactory"> 
 		<beans:property name="sessionFactory" ref="sessionFactory"/>
 	 </beans:bean>
 	  	
   	 <beans:bean id="entityManagerFactory" name="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
            p:dataSource-ref="dataSource" lazy-init="false">
          <beans:property name="jpaVendorAdapter">
      		<beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
                    p:database="MYSQL" p:showSql="false" p:generateDdl="true"/>
          </beans:property>
          
          <beans:property name="persistenceUnitName" value="hcs"/>
          <beans:property name="packagesToScan" value="com.tekvizion.hcs"/>
          <beans:property name="jpaPropertyMap">
          	<beans:map>            		
          		<beans:entry key="hibernate.hbm2ddl.auto" value="update"/>
          	</beans:map>
          </beans:property>
     </beans:bean>
     
     <beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
              p:entityManagerFactory-ref="entityManagerFactory"/>
              
     <beans:bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
 	
 		<!-- Bean to initialize application. Eg. UserType and initial users  -->
	 <beans:bean id="appInit" class="com.tekvizion.hcs.util.AppInitializer" depends-on="entityManagerFactory" scope="singleton"/>
	 
 	 <beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource" p:basenames="messages/messages"/>
 	 
     <beans:bean id="loginSessionDetails" class="com.tekvizion.hcs.projectmanagement.security.UserLoginDetails" scope="singleton" factory-method="getInstance"/>

	 <!--
	<beans:bean id="dataMonitoringScheduler" class="com.tekvizion.hcs.cronjobs.DataMonitoringCronScheduler"  scope="singleton">
 	</beans:bean> 
	<task:scheduler id="jobDataMonitoringScheduler" pool-size="1"/> 
 	<task:scheduled-tasks scheduler="jobDataMonitoringScheduler">
	-->
    	<!-- <task:scheduled ref="dataMonitoringScheduler" method="retrieveAndUpdateMonitoredData" fixed-rate="${app.settings.datamonitoring.cron.interval:86400000}"/> -->
    <!--
	<task:scheduled ref="dataMonitoringScheduler" method="retrieveAndUpdateMonitoredData" cron="${app.settings.datamonitoring.cron.interval:0 0 1/24 ? * *}"/>
	</task:scheduled-tasks>-->
	
	<!--
	<beans:bean id="vCenterMonitoringDataParserScheduler" class="com.tekvizion.hcs.cronjobs.VCenterMonitoringDataParserCron"  scope="singleton">
 	</beans:bean> 
	<task:scheduler id="jobVCenterMonitoringDataParser" pool-size="1"/> 
 	<task:scheduled-tasks scheduler="jobVCenterMonitoringDataParser">
	-->
 		<!-- <task:scheduled ref="vCenterMonitoringDataParserScheduler" method="retrieveAndParseVCenterMonitoredData" fixed-rate="${app.settings.datamonitoringparser.cron.interval:86400000}"/> -->    	
    <!--	
		<task:scheduled ref="vCenterMonitoringDataParserScheduler" method="retrieveAndParseVCenterMonitoredData" cron="${app.settings.datamonitoringparser.cron.interval:0 0 2/24 ? * *}"/>
	</task:scheduled-tasks>
	-->
	<beans:bean id="smtpAuthenticator"	class="com.tekvizion.hcs.service.SmtpAuthenticator">
		<beans:constructor-arg value="${app.settings.smtpAuthenticator.user:tools@tekvizion.com}" />
		<beans:constructor-arg value="${app.settings.smtpAutenticator.password:tekV1z10n}" />
	</beans:bean>

        <!-- now setup an authenticated session -->
	<beans:bean id="mailSession" class="javax.mail.Session"
		factory-method="getInstance">
		<beans:constructor-arg>
			<beans:props>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtp.socketFactory.port">587</beans:prop>
				<!-- <beans:prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</beans:prop> -->
				<beans:prop key="mail.smtp.socketFactory.fallback">false</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
				 <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				  <beans:prop key="mail.smtp.ssl.trust">10.85.0.233</beans:prop> 
			</beans:props>
		</beans:constructor-arg>
		<beans:constructor-arg ref="smtpAuthenticator" />
	</beans:bean>

       <!--  and configure the MailSender with the authenticated session -->
	<beans:bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="10.85.0.233" />
		<beans:property  name="username" value="${app.settings.smtpAuthenticator.user:tools@tekvizion.com}" />
		<beans:property  name="password" value="${app.settings.smtpAutenticator.password:tekV1z10n}" />
		<beans:property name="javaMailProperties">
		  <beans:props>
	       	<beans:prop key="mail.smtp.auth">true</beans:prop>
	        <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
			<beans:prop key="mail.smtp.ssl.trust">10.85.0.233</beans:prop>
		  </beans:props>		
	    </beans:property>	
	</beans:bean>  
	  
</beans:beans>

